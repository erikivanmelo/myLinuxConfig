snippet php
	<?php
	${1}
endsnippet 
snippet ec
	echo "${1:string}"${2};
endsnippet 
snippet inc
	include '${1:file}';${2}
endsnippet 
snippet inc1
	include_once '${1:file}';${2}
endsnippet 
snippet req
	require '${1:file}';${2}
endsnippet 
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
endsnippet 
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
endsnippet 
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
endsnippet 
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
endsnippet 
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
endsnippet 
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
endsnippet 
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
endsnippet 
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
endsnippet 
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
endsnippet 
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
endsnippet 
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
endsnippet 
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
endsnippet 
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
endsnippet 
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
endsnippet 
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
endsnippet 
snippet def
	define('${1}'${2});${3}
# defined(...)
endsnippet 
snippet def?
	${1}defined('${2}')${3}
endsnippet 
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
endsnippet 
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
endsnippet 
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
endsnippet 
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
endsnippet 
snippet else
	else {
		${1:// code...}
	}
endsnippet 
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
endsnippet 
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
endsnippet 
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
endsnippet 
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
endsnippet 
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
endsnippet 
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
endsnippet 
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
endsnippet 
snippet array
	$${1:arrayName} = array(
		'${2}' => ${3},
		);${4}
##### CodeIgniter Snippets #####
# Generic $this->
endsnippet 
snippet this
	$this->${1:model/controller}->${2:method}(${3:array});${4}
# New Model Class
endsnippet 
snippet classm
	/*
	* ${1:Describe the model's purpose}
	*/
	
	class `Filename()` extends CI_Model
	{
		function __construct()
		{
			parent::__construct();
		}
		${3:// Code...}
	}
# New Controller Class
endsnippet 
snippet classc
	/*
	* ${1:Describe the controller's purpose}
	*/
	
	class `Filename()` extends CI_Controller
	{
		function __construct()
		{
			parent::__construct();
		}
		${3:// Code...}
	}
# Form Validation Rules
endsnippet 
snippet formrule
	$this->form_validation->set_rules('${1:field name}','${2:human name}', '${3:rules}');${4}
# Data array - $data['key']
endsnippet 
snippet darr
	$data['${1:arrayName}'] = array(
		'${2}' => ${3},${4}
		);
# Additional array data
endsnippet 
snippet arrv
	'${1}' => ${2},${3}
# Load view template
endsnippet 
snippet loadtemp
	$data['main_content'] = '${1:view}';
	$this->load->view('includes/template', $data);${2}
##### Common Functions #####
# Form validation run == FALSE
endsnippet 
snippet funform
	function ${1:function}()
	{
		${2:rules}
		if($this->form_validation_run() == FALSE)
		{
			${3:form data arrays}
		}
		else
		{
			${4:success view}
		}
	}
# Return If
endsnippet 
snippet returnif
	if ($q->num_rows() > 0)
	{
		$${1:array} = $q->row_array();
		
		return $${1:array};
	}
	else
	{
		return FALSE;
	}
##### Form Helper #####
# Validation Errors
endsnippet 
snippet valerr
	<?php echo validation_errors(); ?>${1}
# Form Open
endsnippet 
snippet formo
	<?php echo form_open('${1:form controller}'); ?>${2}
# Form Close
endsnippet 
snippet formc
	<?php echo form_close(); ?>${1}
## Form Fields ##
# Hidden
endsnippet 
snippet fhidden
	<?php echo form_hidden('${1:name}', ${2:array}); ?>${3}
# Input
endsnippet 
snippet finput
	<?php echo form_input('${1:array}', set_value('${2:name}')); ?>${3}
# Password
endsnippet 
snippet fpass
	<?php echo form_password('${1:array}', set_value('${2:name}')); ?>${3}
# Upload
endsnippet 
snippet fupload
	<?php echo form_upload('${1:array}', set_value('${2:name}')); ?>${3}
# Text area
endsnippet 
snippet ftext
	<?php echo form_textarea('${1:array}', set_value('${2:name}')); ?>${3}
# Drop-down
endsnippet 
snippet fdrop
	<?php echo form_dropdown('${1:name}',${2:array}, $this->input->post('${1}')); ?>${3}
# Checkbox
endsnippet 
snippet fcheck
	<?php echo form_checkbox($${1:array}['${2:key}'], '', set_checkbox('${1}[]', '${2}')); ?>${3}
# Radio button
endsnippet 
snippet fradio
	<?php echo form_radio($${1:array}['${2:key}'], '', set_radio('${1}[]', '${2}')); ?>${3}
# Form submit
endsnippet 
snippet fsubmit
	<?php echo form_submit('${1:name}', '${2:value}'); ?>${3}
# Form reset
endsnippet 
snippet freset
	<?php echo form_reset('${1:name}', '${2:value}'); ?>${3}
# Fieldset open
endsnippet 
snippet fieldo
	<?php form_fieldset('${1:label}', '${2:array}'); ?>${3}
# Fieldset close
endsnippet 
snippet fieldc
	<?php form_fieldset_close(); ?>${1}
##### HTML Snippets #####
# <br>
endsnippet 
snippet r
	<br`Close()[1:]`>
# Div with class
endsnippet 
snippet div
	<div id="${1:name}" class="${2}">
		${3}
	</div>
# Ordered list
endsnippet 
snippet ol
	<ol id="${1}">
		${2}
	</ol>
# Unordered list
endsnippet 
snippet ul
	<ul id="${1}">
		${2}
	</ul>
# List Item
endsnippet 
snippet li
	<li>${1}</li>${2}
##### PHP/HTML Shorthand #####
# PHP Foreach
endsnippet 
snippet sforeach
	<?php foreach ($${1:array} as $${2:key}) : ?>
		${3:// code...}
	<?php endforeach; ?>
##### Database Class/Active Record #####
# Get query
endsnippet 
snippet dbget
	$q = $this->db->get('${1:table}');${2}
# Get_where query
endsnippet 
snippet dbgetwhere
	$q = $this->db->get_where('${1:table}', array('${2:field}' => $${3:input}));${4}
# Select
endsnippet 
snippet dbselect
	$this->db->select('${1:fields}');${2}
# Where
endsnippet 
snippet dbwhere
	$this->db->where('${1:field}', $${2:input});${3}
# Insert
endsnippet 
snippet dbinsert
	$this->db->insert('${1:table}', $${2:array});${3}
# Update
endsnippet 
snippet dbupdate
	$this->db->update('${1:table}', $${2:array});${3}
# Delete
endsnippet 
snippet dbdelete
	$this->db->delete('${1:table}', $${2:array});${3}
##### URL Helper #####
# Site URL
endsnippet 
snippet surl
	<?php echo site_url("${1:segments}"); ?>${2}
# Base URL
endsnippet 
snippet burl
	<?php echo base_url(); ?>${1}
# Current URL
endsnippet 
snippet curl
	<?php echo current_url(); ?>${1}
# Anchor
endsnippet 
snippet anchor
	<?php echo anchor('${1:segments}', '${2:text}', '${3:attributes}'); ?>${4}
# Safe Mailto
endsnippet 
snippet mailto
	<?php echo safe_mailto('${1:email}', '${2:text}'); ?>${3}
endsnippet
